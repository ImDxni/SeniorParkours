plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'it.dani'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'extendedclip'
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }

    maven {
        name = 'nms-repo'
        url = 'https://repo.codemc.io/repository/nms/'
    }
}

dependencies {
    implementation project(path: ':commons')
    implementation project(path: ':v1_19_R2')
    implementation project(path: ':v1_19_R1')
    implementation project(path: ':v1_18_R2')
    implementation project(path: ':v1_18_R1')
    implementation project(path: ':v1_17_R1')
    implementation project(path: ':v1_16_R3')

    compileOnly 'org.spigotmc:spigot-api:1.16.5-R0.1-SNAPSHOT'
    compileOnly 'me.clip:placeholderapi:2.11.2'
    compileOnly 'fr.minuskube.inv:smart-invs:1.2.7'

    compileOnly 'org.jetbrains:annotations:16.0.2'
    compileOnly 'org.projectlombok:lombok:1.18.24'

    annotationProcessor 'org.projectlombok:lombok:1.18.24'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = 17
    targetCompatibility = 17
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
